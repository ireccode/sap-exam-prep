version: '3.8'

services:
  app:
    image: ghcr.io/ireccode/sap-exam-prep:${GIT_COMMIT_HASH:-latest}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    ports:
      - "5173:5173"  
    environment:
      - HOST=0.0.0.0  # Allow external connections
      - NODE_ENV=production
      - VIRTUAL_PROTO=https
    volumes:
      - logs:/var/log/nginx
      - type: bind
        source: ./.env.production
        target: /app/.env
        read_only: true
      - data:/app/data
      - public:/app/public
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./dist:/app/dist
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://0.0.0.0:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: ghcr.io/ireccode/sap-exam-prep-nginx:${GIT_COMMIT_HASH:-latest}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: ./examprep_app_nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
      - type: bind
        source: /etc/letsencrypt
        target: /etc/letsencrypt
        read_only: true
      - type: bind
        source: ./init-certs.sh
        target: /docker-entrypoint.d/init-certs.sh
        read_only: true
      - ./.env.production:/usr/share/nginx/html/.env
      - ./dist:/usr/share/nginx/html:ro
    environment:
      - NGINX_HOST=saparchitectprep.com
      - NGINX_PORT=443
      - NGINX_CERT_EMAIL=support@saparchitectprep.com
    command: |
      /bin/sh -c "
      apk add --no-cache openssl curl bind-tools certbot certbot-nginx &&
      chmod +x /docker-entrypoint.d/init-certs.sh &&
      /docker-entrypoint.d/init-certs.sh &&
      nginx -g 'daemon off;'"
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "--timeout=1", "--user-agent=Docker-Healthcheck", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s

networks:
  app-network:
    driver: bridge
    driver_opts:
      encrypted: "true"

volumes:
  logs:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/logs
      o: bind
  data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  public:
    driver: local
  dist:
    driver: local 