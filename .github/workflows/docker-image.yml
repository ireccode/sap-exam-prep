name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ireccode/sap-exam-prep

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      # Create environment file for build
      - name: Create environment file
        run: |
          cat > .env.production << EOF
          # Supabase Configuration (client-side)
          VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
          
          # Stripe Configuration (client-side)
          VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}
          VITE_STRIPE_PREMIUM_PRICE_ID=${{ secrets.VITE_STRIPE_PREMIUM_PRICE_ID }}
          
          # Encryption Keys (server-side only)
          BASIC_ENCRYPTION_KEY=${{ secrets.BASIC_ENCRYPTION_KEY }}
          PREMIUM_ENCRYPTION_KEY=${{ secrets.PREMIUM_ENCRYPTION_KEY }}
          
          # API Keys (server-side only)
          OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
          WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}

          VITE_TARGET_DOMAIN=${{ secrets.VITE_TARGET_DOMAIN }}
          # Build Information
          GIT_COMMIT_HASH=${{ github.sha }}
          EOF

      # Extract metadata for Docker image
      - name: Extract metadata for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=raw,value=${{ github.sha }}
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_COMMIT_HASH=${{ github.sha }}
            BASIC_ENCRYPTION_KEY=${{ secrets.BASIC_ENCRYPTION_KEY }}
            PREMIUM_ENCRYPTION_KEY=${{ secrets.PREMIUM_ENCRYPTION_KEY }}
            OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
            WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }}
            VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
            VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
            VITE_STRIPE_PUBLISHABLE_KEY=${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}
            VITE_STRIPE_PREMIUM_PRICE_ID=${{ secrets.VITE_STRIPE_PREMIUM_PRICE_ID }}
            VITE_TARGET_DOMAIN=${{ secrets.VITE_TARGET_DOMAIN }}
          secret-files: |
            "env_file=.env.production"

      # Trigger deployment if on main branch
#      - name: Trigger deployment
#        if: github.ref == 'refs/heads/main'
#        run: |
#          echo "Deployment triggered for version ${{ steps.meta.outputs.version }}"
          # Add deployment script or webhook here 